---

- name: "{{ iface_name }}: set ip address"
  when:
    - iface.ip_address|default(None)
    - iface.netmask|default(None)
    - not iface.dhcp_client|default(False)
    - iface.enabled
  routeros_command:
    commands:
      - "/ip address add address={{ iface.ip_address }}/{{ iface.netmask|int }} comment=addr-{{ iface_name }} interface={{ iface_name }} network={{ iface.network|default('') }}"
    wait_for:
      - result[0] not contains "error"
      - result[0] not contains "expected end of command line"

- name: "{{ iface_name }}: clean ip address"
  when:
    - iface.ip_address|default(None)
    - iface.netmask|default(None)
    - not iface.enabled
  routeros_command:
    commands:
      - "/ip address remove numbers=[/ip address find interface={{ iface_name }}]"
    wait_for:
      - result[0] not contains "error"
      - result[0] not contains "expected end of command line"

- name: "{{ iface_name }}: set dhcp client"
  when:
    - not iface.ip_address|default(None)
    - not iface.netmask|default(None)
    - iface.dhcp_client|default(False)
    - iface.enabled
  block:
    - name: "{{ iface_name }}: check if dhcp-client exists"
      routeros_command:
        commands:
          - "put [/ip dhcp-client find interface={{ iface_name }}]"
        wait_for:
          - result[0] not contains "error"
          - result[0] not contains "expected end of command line"
      register: check_dhclient

    - name: "{{ iface_name }}: set dhcp client"
      when: check_dhclient.stdout|first|length == 0
      vars:
        use_dhcp_dns: "{{ (entry.dns is defined)|ternary('no','yes','yes') }}"
        use_dhcp_gw: "{{ (entry.default_gw is defined)|ternary('no','yes','yes') }}"
      routeros_command:
        commands:
          - "/ip dhcp-client add interface={{ iface_name }} comment=dhcp-client-{{ iface_name }} use-peer-dns={{ use_dhcp_dns }} add-default-route={{ use_dhcp_gw }}"
        wait_for:
          - result[0] not contains "error"
          - result[0] not contains "expected end of command line"

- name: "{{ iface_name }}: clean dhcp client"
  when:
    - iface.dhcp_client|default(False)
    - not iface.enabled
  vars:
    use_dns: "{{ (entry.dns|default(None) is defined)|ternary('no','yes','yes') }}"
    use_gw: "{{ (entry.default_gw|default(None) is defined)|ternary('no','yes','yes') }}"
  routeros_command:
    commands:
      - "/ip dhcp-client remove numbers=[/ip dhcp-client find interface={{ iface_name }}]"
    wait_for:
      - result[0] not contains "error"
      - result[0] not contains "expected end of command line"

- name: "{{ iface_name }}: set dhcp server"
  when:
    - not iface.dhcp_client|default(False)
    - iface.dhcp_pool is defined
  vars:
    dhcp_server_name: "dhcp-server-{{ iface_name }}"
    dhcp_pool_name: "dhcp-pool-{{ iface_name }}"
    dhcp_net_name: "dhcp-server-{{ iface_name }}-basenet"
  block:
    - name: "{{ iface_name }}: check dhcp server requirements"
      assert:
        quiet: true
        that:
          - iface.ip_address is defined
          - iface.network is defined
          - iface.netmask is defined

    - name: "{{ iface_name }}: set dhcp pool"
      when:
        - iface.enabled
      routeros_command:
        commands:
          - "/ip pool add name={{ dhcp_pool_name }} ranges={{ iface.dhcp_pool }}"
          - "/ip pool set {{ dhcp_pool_name }} ranges={{ iface.dhcp_pool }}"
        wait_for:
          - result[0] not contains "error"
          - result[0] not contains "expected end of command line"
          - result[1] not contains "error"
          - result[1] not contains "expected end of command line"

    - name: "{{ iface_name }}: set dhcp server"
      when:
        - iface.enabled
      block:
        - name: "{{ iface_name }}: add dhcp network"
          routeros_command:
            commands:
              - "/ip dhcp-server network add comment={{ dhcp_net_name }}"
            wait_for:
              - result[0] not contains "error"
              - result[0] not contains "expected end of command line"

        - name: "{{ iface_name }}: set dhcp network settings"
          routeros_command:
            commands:
              - "/ip dhcp-server network set numbers=[find comment={{ dhcp_net_name }}] address={{ iface.network }}/{{ iface.netmask }} dns-server={{ iface.dns|default(iface.ip_address) }} gateway={{ iface.ip_address }} netmask={{ iface.netmask }} domain=\"{{ iface.domain|default('') }}\""
            wait_for:
              - result[0] not contains "error"
              - result[0] not contains "expected end of command line"

        - name: "{{ iface_name }}: add dhcp server"
          routeros_command:
            commands:
              - "/ip dhcp-server add name={{ dhcp_server_name }} interface={{ iface_name }}"
            wait_for:
              - result[0] not contains "error"
              - result[0] not contains "expected end of command line"

        - name: "{{ iface_name }}: set dhcp server settings"
          routeros_command:
            commands:
              - "/ip dhcp-server set {{ dhcp_server_name }} address-pool={{ dhcp_pool_name }} disabled=no lease-time={{ iface.leasetime|default('1d') }}"
            wait_for:
              - result[0] not contains "error"
              - result[0] not contains "expected end of command line"

    - name: "{{ iface_name }}: clean dhcp server"
      when:
        - not iface.enabled
      routeros_command:
        commands:
          - "/ip pool remove dhcp-pool-{{ iface_name }}"
          - "/ip dhcp-server remove dhcp-server-{{ iface_name }}"
          - "/ip dhcp-server network remove numbers=[/ip dhcp-server network find comment=dhcp-server-{{ iface_name }}-basenet]"
        wait_for:
          - result[0] not contains "error"
          - result[0] not contains "expected end of command line"
          - result[1] not contains "error"
          - result[1] not contains "expected end of command line"
          - result[2] not contains "error"
          - result[2] not contains "expected end of command line"

...
